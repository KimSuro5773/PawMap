@use "@/styles/base/variables" as *;

.locationFilter {
  display: flex;
  flex-direction: column;
  gap: $spacing-lg;

  &.disabled {
    opacity: 0.6;
    pointer-events: none;
  }
}

.locationTypes {
  display: flex;
  gap: $spacing-sm;
  flex-wrap: wrap;
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.regionSelector {
  padding: $spacing-lg;
  background: $gray-50;
  border: 1px solid $gray-200;
  border-radius: $radius-lg;
}

.error {
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;
  padding: $spacing-md;
  background: rgba($error-color, 0.1);
  border: 1px solid rgba($error-color, 0.3);
  border-radius: $radius-md;
  color: $error-color;
}

.errorMessage {
  margin: 0;
  font-size: $font-sm;
  line-height: 1.4;
}

.dismissButton {
  align-self: flex-start;
  padding: $spacing-xs $spacing-sm;
  border: none;
  background: transparent;
  color: $error-color;
  font-size: $font-sm;
  font-weight: $font-medium;
  cursor: pointer;
  border-radius: $radius-sm;
  transition: $transition-base;

  &:hover {
    background: rgba($error-color, 0.1);
  }

  &:active {
    background: rgba($error-color, 0.2);
  }
}

.locationInfo {
  display: flex;
  align-items: flex-start;
  gap: $spacing-sm;
  padding: $spacing-sm $spacing-md;
  background: rgba($success-color, 0.1);
  border: 1px solid rgba($success-color, 0.3);
  border-radius: $radius-md;
  color: $success-color;
  font-size: $font-sm;

  svg {
    flex-shrink: 0;
    margin-top: 2px;
  }
}

.locationDetails {
  display: flex;
  flex-direction: column;
  gap: $spacing-xs;
  flex: 1;
}

.accuracyInfo {
  font-size: $font-xs;
  font-weight: $font-medium;
}

.locationWarning {
  font-size: $font-xs;
  color: $warning-color !important;
  background: rgba($warning-color, 0.1);
  padding: $spacing-xs;
  border-radius: $radius-sm;
}

// 위치 확인 모달
.confirmModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.confirmContent {
  background: white;
  padding: $spacing-xl;
  border-radius: $radius-lg;
  max-width: 400px;
  margin: $spacing-md;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);

  h4 {
    margin: 0 0 $spacing-md 0;
    color: $gray-900;
    font-weight: $font-semibold;
  }

  p {
    margin: $spacing-sm 0;
    color: $gray-700;
    font-size: $font-sm;
    line-height: 1.5;
  }
}

.accuracyWarning {
  color: $warning-color !important;
  background: rgba($warning-color, 0.1);
  padding: $spacing-xs $spacing-sm;
  border-radius: $radius-sm;
  font-weight: $font-medium;
}

.confirmButtons {
  display: flex;
  gap: $spacing-sm;
  margin-top: $spacing-lg;
  flex-direction: column;

  @media (min-width: $mobile) {
    flex-direction: row;
  }
}

.confirmButton {
  flex: 1;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $radius-md;
  font-weight: $font-medium;
  cursor: pointer;
  transition: $transition-base;
  background: $primary-color;
  color: white;

  &:hover {
    background: color-mix(in srgb, $primary-color 90%, black);
  }

  &:active {
    transform: translateY(1px);
  }
}

.cancelButton {
  flex: 1;
  padding: $spacing-sm $spacing-md;
  border: 1px solid $gray-300;
  border-radius: $radius-md;
  font-weight: $font-medium;
  cursor: pointer;
  transition: $transition-base;
  background: white;
  color: $gray-700;

  &:hover {
    background: $gray-50;
    border-color: $gray-400;
  }

  &:active {
    transform: translateY(1px);
  }
}

// 모바일 반응형
@media (max-width: $mobile) {
  .locationFilter {
    gap: $spacing-md;
  }

  .locationTypes {
    gap: $spacing-xs;

    button {
      flex: 1;
      min-width: 0; // flex item이 너무 작아지지 않도록
      justify-content: center;
      &:first-child {
        flex: 1.2; // '전체 지역' 버튼을 조금 더 크게
      }
    }
  }

  .regionSelector {
    padding: $spacing-md;
  }

  .error {
    padding: $spacing-sm;
  }

  .errorMessage {
    font-size: $font-xs;
  }

  .locationInfo {
    padding: $spacing-xs $spacing-sm;
    font-size: $font-xs;
  }
}

// 태블릿 반응형
@media (max-width: $tablet) {
  .locationTypes {
    button {
      min-width: 120px; // 최소 너비 보장
    }
  }
}
